#!/usr/bin/env python3 import time import rclpy from rclpy.node import Node from geometry_msgs.msg import Twist from turtlesim.msg import Pose import math class TurtleControllerNode(Node): def __init__(self): super().__init__("turtle_controller") self.target_x = 8.0 self.target_y = 4.0 self.pose_ = None self.cmd_vel_publisher_ = self.create_publisher(Twist, "turtle1/cmd_vel", 10) self.pose_subscriber_ = self.create_subscription(Pose, "turtle1/pose", self.callback_turtle_pose, 10) self.control_loop_timer_ = self.create_timer(0.01, self.timera) def callback_turtle_pose(self,msg): self.pose_ = msg def timera(self): cmd_vel = Twist() cmd_vel.linear.x = 1.0 turn_vel = Twist() turn_vel.linear.x = 0.0 turn_vel.angular.z = math.radians(90) count = 0 while(True): for x in range(0,10): self.cmd_vel_publisher_.publish(cmd_vel) time.sleep(0.1) for x in range(0,10): self.cmd_vel_publisher_.publish(turn_vel) time.sleep(0.1) count = count+1 if(count == 2): count = 0 def main(args=None): rclpy.init(args=args) node = TurtleControllerNode() rclpy.spin(node) rclpy.shutdown() if __name__ == "__main__": main()